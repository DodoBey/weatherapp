{"version":3,"sources":["videos/rainy.mp4","videos/cloudy.mp4","videos/snowy.mp4","videos/clear.mp4","components/BGVideo_Component.js","icon/windsock.svg","icon/temperature.svg","icon/humidity.svg","icon/sunrise.svg","icon/sunset.svg","components/Default_Component.js","icon/cloudy.svg","icon/rainy.svg","icon/snow.svg","icon/clear.svg","components/Weekly_Component.js","components/Fetch_Component.js","App.js","reportWebVitals.js","index.js"],"names":["BGVideoComponent","props","currentValue","currentStatus","console","log","bgVideo","src","CloudyVideo","type","RainyVideo","SnowyVideo","ClearVideo","className","autoPlay","loop","muted","DefaultComponent","id","city","onClick","currentTemp","windSock","currentWind","feelsLike","currentFeel","humidity","currentHumidity","sunRise","sunrise","sunSet","sunset","WeeklyComponent","weeklyDays","weeklyInformation","Array","from","map","value","key","icon","CloudyImg","RainyImg","ClearImg","SnowyImg","FetchComponent","useState","setCurrentTemp","setCurrentHumidity","setCurrentFeel","setCurrentWind","setCurrentStatus","setSunrise","setSunset","cityName","setCityName","setLon","setLat","setWeeklyDay","currentDay","setCurrentDay","api","FetchData","callback","fetch","then","response","status","json","data","Math","round","main","temp","feels_like","wind","speed","weather","sys","name","coord","lon","lat","catch","err","FetchWeeklyData","weeklyData","arr","daily","day","push","error","currentDayArg","dayArr","arrDays","CreateWeeklyDay","useEffect","Date","getDay","riseTime","getHours","getMinutes","setTime","placeholder","onKeyPress","e","document","getElementById","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ad917e0f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rainy.cf557368.mp4\";","export default __webpack_public_path__ + \"static/media/cloudy.9cac5545.mp4\";","export default __webpack_public_path__ + \"static/media/snowy.587bf315.mp4\";","export default __webpack_public_path__ + \"static/media/clear.ac9608f0.mp4\";","import RainyVideo from '../videos/rainy.mp4';\r\nimport CloudyVideo from '../videos/cloudy.mp4';\r\nimport SnowyVideo from '../videos/snowy.mp4';\r\nimport ClearVideo from '../videos/clear.mp4';\r\n\r\nconst BGVideoComponent = (props) => {\r\n    const currentValue = [props.currentStatus];\r\n    console.log(currentValue);\r\n\r\n    // const bgVideochanger = currentValue => {\r\n        let bgVideo = \"\" ;\r\n        console.log(currentValue[0]);\r\n        switch(currentValue[0]){\r\n            case \"Clouds\":{\r\n                bgVideo = <source src={CloudyVideo} type='video/mp4' />\r\n                break;\r\n            }\r\n            case \"Rain\" : {\r\n                bgVideo = <source src={RainyVideo} type='video/mp4' />\r\n                break;\r\n            }\r\n            case \"Snow\" :{\r\n                bgVideo = <source src={SnowyVideo} type='video/mp4' />\r\n                break;\r\n            }\r\n            case \"Clear\" :{\r\n                bgVideo = <source src={ClearVideo} type='video/mp4' />\r\n                break;\r\n            }\r\n            case \"\" :{\r\n                bgVideo = <source src={ClearVideo} type='video/mp4' />\r\n                break;\r\n            }\r\n        \r\n        return bgVideo = <>{bgVideo}</>\r\n        \r\n    };\r\n\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <video className='bgVideo' autoPlay loop muted>\r\n            {bgVideo}   \r\n        </video>\r\n    )\r\n}\r\n\r\nexport default BGVideoComponent","export default __webpack_public_path__ + \"static/media/windsock.647849cf.svg\";","export default __webpack_public_path__ + \"static/media/temperature.19128b31.svg\";","export default __webpack_public_path__ + \"static/media/humidity.4dbe8218.svg\";","export default __webpack_public_path__ + \"static/media/sunrise.441f14c0.svg\";","export default __webpack_public_path__ + \"static/media/sunset.567a4052.svg\";","import React from 'react';\nimport windSock from '../icon/windsock.svg'\nimport feelsLike from '../icon/temperature.svg'\nimport humidity from '../icon/humidity.svg'\nimport sunRise from '../icon/sunrise.svg'\nimport sunSet from '../icon/sunset.svg'\n\n\nconst DefaultComponent = (props) => {\n    \n    return(\n        <>\n            <div id=\"defaultArea\">\n            <div className=\"cityName\">{props.city}</div>\n            <div className=\"status\">{props.currentStatus}</div>\n\n            <div className=\"flipArea\" onClick=\"\">\n                <div className=\"temparea frontSide\">\n                    <span className=\"temp\">{props.currentTemp}°</span>\n                </div>\n                <div className=\"backSide\">\n                    <div className=\"wind\">\n                    \n                    <span><img src={windSock}></img>{props.currentWind}km/h</span>\n                    </div>\n\n                    <div className=\"feelLike\">\n                    \n                    <span><img src={feelsLike}></img>{props.currentFeel}°</span>\n                    </div>\n\n                    <div className=\"humidity\">\n                   \n                    <span><img src={humidity}></img>{props.currentHumidity}%</span>\n                    </div>\n\n                    <div className=\"sunrise\">\n                    \n                    <span><img src={sunRise}></img>{props.sunrise}</span>\n                    </div>\n\n                    <div className=\"sunset\">\n                    \n                    <span><img src={sunSet}></img>{props.sunset}</span>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </>\n    )\n}\nexport default DefaultComponent;\n","export default __webpack_public_path__ + \"static/media/cloudy.24f9a474.svg\";","export default __webpack_public_path__ + \"static/media/rainy.130d6250.svg\";","export default __webpack_public_path__ + \"static/media/snow.dce3f5e7.svg\";","export default __webpack_public_path__ + \"static/media/clear.c33ef664.svg\";","import CloudyImg from '../icon/cloudy.svg';\r\nimport RainyImg from '../icon/rainy.svg';\r\nimport SnowyImg from '../icon/snow.svg';\r\nimport ClearImg from '../icon/clear.svg'\r\n\r\nconst WeeklyComponent = (props) => {\r\n    console.log(props.weeklyDays)\r\n    const dayName = Array.from(props.weeklyDays);\r\n    \r\n\r\n    const weeklyInformation = dayName.map((value,key) => {\r\n        let icon = \"\";\r\n        console.log(value[0])  \r\n        switch(value[0]) {\r\n            case \"Clouds\": {\r\n                icon = <img src={CloudyImg}></img>\r\n                break;\r\n            }\r\n            case \"Rain\": {\r\n                icon = <img src={RainyImg}></img>\r\n                break;\r\n            }\r\n            case \"Clear\": {\r\n                icon = <img src={ClearImg}></img>\r\n                break;\r\n            }\r\n            case \"Snow\": {\r\n                icon = <img src={SnowyImg}></img>\r\n                break;\r\n            }\r\n        }\r\n        \r\n        return <>\r\n            <div className=\"weeklyCondition\">\r\n            <div><div >{icon}</div>\r\n            <div >{value[1]+\"°\"}</div> {/**TODO - Fix the key issue */}\r\n            <div >{value[2]}</div></div>\r\n            </div>\r\n        </>;\r\n        });\r\n\r\n        \r\n    return(\r\n        <>\r\n        <div id=\"weeklyBar\">{weeklyInformation}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeeklyComponent;","import React, { useState,useEffect,setState } from 'react';\nimport BGVideoComponent from './BGVideo_Component';\nimport DefaultComponent from './Default_Component';\nimport WeeklyComponent from './Weekly_Component';\n\n    const FetchComponent = () => {\n  // Declare a new state variable, which we'll call \"count\"\n    const [currentTemp, setCurrentTemp] = useState(\"\");\n    const [currentHumidity, setCurrentHumidity] = useState(\"\");\n    const [currentFeel, setCurrentFeel] = useState(\"\");\n    const [currentWind, setCurrentWind] = useState(\"\");\n    const [currentStatus, setCurrentStatus] = useState(\"\");\n    const [sunrise, setSunrise] = useState(\"\");\n    const [sunset, setSunset] = useState(\"\");\n    const [cityName, setCityName] = useState(\"\");\n    const [lon, setLon] = useState(\"\");\n    const [lat, setLat] = useState(\"\");\n\n    const [day, setDay] = useState(\"\");\n    // const [weeklyStatus,setWeeklyStatus] = useState(\"\");\n    // const [weeklyTemp,setWeeklyTemp] = useState(\"\");\n    const [weeklyDays, setWeeklyDay] = useState(\"\");\n    const [currentDay, setCurrentDay] = useState(\"\");\n\n\n\n    const api = {\n    key: \"db27287803721756d273ad76e35706ea\",\n    mainUrl: \"https://api.openweathermap.org/data/2.5/\"\n}\n    // Create fetch function for weekly data\n  \n    //create the function to fetch current the data\n    const FetchData = (city,callback) => {\n        fetch(`${api.mainUrl}weather?q=${city}&units=metric&appid=${api.key}`).then(response => {\n            if(response.status !== 200) {\n                console.log(`error ${response.status}`)\n            }\n\n        \n        response.json().then(data => {\n            setCurrentTemp(Math.round(data.main.temp));\n            setCurrentHumidity(data.main.humidity);\n            setCurrentFeel(Math.round(data.main.feels_like));\n            setCurrentWind(Math.round(data.wind.speed));\n            setCurrentStatus(data.weather[0].main);\n            setSunrise(data.sys.sunrise);\n            setSunset(data.sys.sunset);\n            setCityName(data.name);\n            setLon(data.coord.lon);\n            setLat(data.coord.lat);\n            callback(data.coord.lat,data.coord.lon);\n        }) \n            .catch(err => {\n                console.log(`error ${err}`)\n            })\n        })\n    }\n\n    const FetchWeeklyData = (...arg) => {\n        fetch(`${api.mainUrl}onecall?lat=${arg[0]}&lon=${arg[1]}&units=metric&appid=${api.key}`).then(response => {\n            if(response.status !== 200) {\n                console.log(`error ${response.status}`)\n            }\n            response.json().then(weeklyData => {\n                let arr = [];\n                for(let day of weeklyData.daily){\n                    arr.push([day.weather[0].main, Math.round(day.temp.day)]);\n                }\n                setWeeklyDay(arr);\n                \n            }).catch(error => {\n                console.log(`error ${error}`)\n            })\n        })\n       }\n\n    const CreateWeeklyDay = (currentDayArg, dayArr) => {\n        const arrDays = [\"Sun\",\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\"Sun\",\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        for(let i of dayArr){\n         i.push(arrDays[currentDayArg+1]); \n         currentDayArg++;\n     }\n        return;\n    }\n \n    CreateWeeklyDay(currentDay,weeklyDays);\n     //This will happen before your component to create\n    useEffect(() => {\n        setCurrentDay(new Date().getDay());\n        FetchData(\"vancouver\",FetchWeeklyData);\n    },[]);\n    \n    const keyEnter = (e) => {\n        if (e.key === 'Enter') {\n        let value = document.getElementById(\"cityName\").value;\n        FetchData(value,FetchWeeklyData);\n        return;\n        }\n    }\n        //Time convert\n        const sunRiseHour = new Date(sunrise * 1000).getHours();\n        const sunRiseMinute = new Date(sunrise * 1000).getMinutes();\n        const riseTime = ((sunRiseHour)+\":\"+(sunRiseMinute));\n        \n\n        const sunSetHour = new Date(sunset * 1000).getHours();\n        const sunSetMinute = new Date(sunset * 1000).getMinutes();\n        const setTime = ((sunSetHour)+\":\"+(sunSetMinute));\n    \n    \n\n\n    return(\n        <>\n            <div className=\"search_area\">\n           <input type=\"text\" placeholder=\"Search City\" id=\"cityName\" className=\"search_bar\" onKeyPress={keyEnter}/>\n           </div>\n           <div id=\"weatherSection\">\n        <BGVideoComponent\n        currentStatus={currentStatus}\n        />\n           <DefaultComponent \n            city={cityName} \n            currentWind={currentWind} \n            currentFeel={currentFeel}\n            currentTemp={currentTemp}\n            currentHumidity={currentHumidity}\n            currentStatus={currentStatus}\n            sunrise={riseTime}\n            sunset={setTime}\n            />\n            <WeeklyComponent\n            weeklyDays={weeklyDays}\n            />\n            </div>\n\n        </>\n    )\n}\nexport default FetchComponent;","import './App.css';\nimport FetchComponent from './components/Fetch_Component';\nimport DefaultComponent from './components/Default_Component'\n\nfunction App() {\n  return (\n    <div className=\"allData\">\n    <main>\n    <FetchComponent/>\n    </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}